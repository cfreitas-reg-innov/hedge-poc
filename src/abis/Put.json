{
  "contractName": "Put",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DaiToken",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve()\":{\"notice\":\"Allows the ERC pool contract to receive and send tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Put.sol\":\"Put\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/DaiToken.sol\":{\"keccak256\":\"0x079381d8a9a98b1f8bfff340f35eac406fc9e1ddc875835448468237af86a077\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c9251ae28e4df7d9378cb3696c18987238a279ea4e539afe40f2dadf2beb0371\",\"dweb:/ipfs/QmQXJnycD2KCFi5VQygzqU4nfTu1ZmYmuiCcbBys78NTi2\"]},\"/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/LiquidityPool.sol\":{\"keccak256\":\"0x3b6d9bf121f18d48080105962929a556c71fa93f3c2f1a6a21a099c518935212\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0be051b133e2d59b1913b881d0ca29a18387ee6f90116bc767e5fff9135dd4b4\",\"dweb:/ipfs/QmcupGcUgqrfowdZZuvZGxegzY5rnPr9NGDDuTehsuST81\"]},\"/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Options.sol\":{\"keccak256\":\"0x31821368132cedf7f7e034f3d7498bae5f2f72636eb0ef7fa21bf2c4fd5c20ec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://64126848da445705b0d2c53e69cb415c340c620d8c9905d19c2dd1991be3d463\",\"dweb:/ipfs/QmPD5QqHxDX5PgYnqSTkLE3k36byLx4h7TskG2UXcbAKow\"]},\"/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Put.sol\":{\"keccak256\":\"0xd5174b446184a0135079c1c481a87d61435b20253050574c0219b2852a5097d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9e7e9df546c3dec2e64a6cc79862da7261737435b4483b15f33763654afcb6c4\",\"dweb:/ipfs/QmWxgnrGARw24iHMKGW8rLuGUDxqcpxuShuT31u9ny2PYR\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601981526020017f507574204865646765204f7074696f6e20436f6e747261637400000000000000815250600190805190602001906200005192919062000273565b503480156200005f57600080fd5b5060405162003a3238038062003a32833981810160405281019062000085919062000348565b600080620000986200026b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600060146101000a81548160ff0219169083600181111562000182577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620001fa9062000304565b62000206919062000385565b604051809103906000f08015801562000223573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000491565b600033905090565b828054620002819062000412565b90600052602060002090601f016020900481019282620002a55760008555620002f1565b82601f10620002c057805160ff1916838001178555620002f1565b82800160010185558215620002f1579182015b82811115620002f0578251825591602001919060010190620002d3565b5b50905062000300919062000312565b5090565b612bfa8062000e3883390190565b5b808211156200032d57600081600090555060010162000313565b5090565b600081519050620003428162000477565b92915050565b6000602082840312156200035b57600080fd5b60006200036b8482850162000331565b91505092915050565b6200037f81620003ea565b82525050565b60006020820190506200039c600083018462000374565b92915050565b6000620003af82620003ca565b9050919050565b6000620003c382620003a2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003f782620003fe565b9050919050565b60006200040b82620003ca565b9050919050565b600060028204905060018216806200042b57607f821691505b6020821081141562000442576200044162000448565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6200048281620003b6565b81146200048e57600080fd5b50565b61099780620004a16000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c57806312424e3f1461007a578063715018a6146100845780638da5cb5b1461008e578063f2fde38b146100ac575b600080fd5b6100646100c8565b6040516100719190610707565b60405180910390f35b610082610156565b005b61008c610273565b005b6100966103ad565b6040516100a391906106c3565b60405180910390f35b6100c660048036038101906100c191906105b1565b6103d6565b005b600180546100d590610820565b80601f016020809104026020016040519081016040528092919081815260200182805461010190610820565b801561014e5780601f106101235761010080835404028352916020019161014e565b820191906000526020600020905b81548152906001019060200180831161013157829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a084595161401484a0000006040518363ffffffff1660e01b81526004016101e09291906106de565b602060405180830381600087803b1580156101fa57600080fd5b505af115801561020e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023291906105da565b610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610749565b60405180910390fd5b565b61027b61057f565b73ffffffffffffffffffffffffffffffffffffffff166102996103ad565b73ffffffffffffffffffffffffffffffffffffffff16146102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690610769565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103de61057f565b73ffffffffffffffffffffffffffffffffffffffff166103fc6103ad565b73ffffffffffffffffffffffffffffffffffffffff1614610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044990610769565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610729565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008135905061059681610933565b92915050565b6000815190506105ab8161094a565b92915050565b6000602082840312156105c357600080fd5b60006105d184828501610587565b91505092915050565b6000602082840312156105ec57600080fd5b60006105fa8482850161059c565b91505092915050565b61060c816107a5565b82525050565b600061061d82610789565b6106278185610794565b93506106378185602086016107ed565b61064081610881565b840191505092915050565b6000610658602683610794565b915061066382610892565b604082019050919050565b600061067b601483610794565b9150610686826108e1565b602082019050919050565b600061069e602083610794565b91506106a98261090a565b602082019050919050565b6106bd816107e3565b82525050565b60006020820190506106d86000830184610603565b92915050565b60006040820190506106f36000830185610603565b61070060208301846106b4565b9392505050565b600060208201905081810360008301526107218184610612565b905092915050565b600060208201905081810360008301526107428161064b565b9050919050565b600060208201905081810360008301526107628161066e565b9050919050565b6000602082019050818103600083015261078281610691565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006107b0826107c3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561080b5780820151818401526020810190506107f0565b8381111561081a576000848401525b50505050565b6000600282049050600182168061083857607f821691505b6020821081141561084c5761084b610852565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f6b656e20617070726f7665206661696c6564000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61093c816107a5565b811461094757600080fd5b50565b610953816107b7565b811461095e57600080fd5b5056fea2646970667358221220f3c72a7a7197e82f662b2deca7ccbc800da638d02f7d878c7568e96a4d8c1a1b64736f6c6343000803003360806040523480156200001157600080fd5b5060405162002bfa38038062002bfa83398181016040528101906200003791906200029e565b6040518060400160405280601281526020017f486567696320444149204c5020546f6b656e00000000000000000000000000008152506040518060400160405280600881526020017f77726974654441490000000000000000000000000000000000000000000000008152506000620000b5620001cf60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600490805190602001906200016b929190620001d7565b50806005908051906020019062000184929190620001d7565b50505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000391565b600033905090565b828054620001e59062000312565b90600052602060002090601f01602090048101928262000209576000855562000255565b82601f106200022457805160ff191683800117855562000255565b8280016001018555821562000255579182015b828111156200025457825182559160200191906001019062000237565b5b50905062000264919062000268565b5090565b5b808211156200028357600081600090555060010162000269565b5090565b600081519050620002988162000377565b92915050565b600060208284031215620002b157600080fd5b6000620002c18482850162000287565b91505092915050565b6000620002d782620002f2565b9050919050565b6000620002eb82620002ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200032b57607f821691505b6020821081141562000342576200034162000348565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6200038281620002de565b81146200038e57600080fd5b50565b61285980620003a16000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a9059cbb11610071578063a9059cbb14610346578063ad7a672f14610376578063dd62ed3e14610394578063ed922a06146103c4578063f2fde38b146103e057610121565b806370a08231146102a0578063715018a6146102d05780638da5cb5b146102da57806395d89b41146102f8578063a457c2d71461031657610121565b806323b872dd116100f457806323b872dd146101c25780632e1a7d4d146101f25780632e2ebe0614610222578063313ce56714610252578063395093511461027057610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806321e5e2c414610192575b600080fd5b61012e6103fc565b60405161013b9190611e7c565b60405180910390f35b61015e60048036038101906101599190611a8a565b61048e565b60405161016b9190611e61565b60405180910390f35b61017c6104ac565b604051610189919061209e565b60405180910390f35b6101ac60048036038101906101a791906119d6565b6104b6565b6040516101b9919061209e565b60405180910390f35b6101dc60048036038101906101d79190611a3b565b610512565b6040516101e99190611e61565b60405180910390f35b61020c60048036038101906102079190611aef565b610613565b604051610219919061209e565b60405180910390f35b61023c60048036038101906102379190611aef565b610825565b604051610249919061209e565b60405180910390f35b61025a6109f7565b60405161026791906120e2565b60405180910390f35b61028a60048036038101906102859190611a8a565b610a00565b6040516102979190611e61565b60405180910390f35b6102ba60048036038101906102b591906119d6565b610aac565b6040516102c7919061209e565b60405180910390f35b6102d8610af5565b005b6102e2610c2f565b6040516102ef9190611de6565b60405180910390f35b610300610c58565b60405161030d9190611e7c565b60405180910390f35b610330600480360381019061032b9190611a8a565b610cea565b60405161033d9190611e61565b60405180910390f35b610360600480360381019061035b9190611a8a565b610dde565b60405161036d9190611e61565b60405180910390f35b61037e610dfc565b60405161038b919061209e565b60405180910390f35b6103ae60048036038101906103a991906119ff565b610eae565b6040516103bb919061209e565b60405180910390f35b6103de60048036038101906103d99190611aef565b610f35565b005b6103fa60048036038101906103f591906119d6565b611028565b005b60606004805461040b906122b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906122b6565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b60006104a261049b6111d1565b84846111d9565b6001905092915050565b6000600354905090565b6000806104c16104ac565b9050600081111561050757610500816104f26104dc86610aac565b6104e4610dfc565b6113a490919063ffffffff16565b6113ba90919063ffffffff16565b915061050c565b600091505b50919050565b600061051f8484846113d0565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061056a6111d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190611f7e565b60405180910390fd5b610607856105f66111d1565b858461060291906121fa565b6111d9565b60019150509392505050565b6000610648610620610dfc565b61063a61062b6104ac565b856113a490919063ffffffff16565b6113ba90919063ffffffff16565b905061065333610aac565b811115610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c9061203e565b60405180910390fd5b600081116106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf9061201e565b60405180910390fd5b6106e23382611652565b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568838360405161072a9291906120b9565b60405180910390a2600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161078f929190611e38565b602060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e19190611ac6565b610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790611f5e565b60405180910390fd5b919050565b600042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006108756104ac565b90506000610881610dfc565b90506000821180156108935750600081115b156108c4576108bd816108af84876113a490919063ffffffff16565b6113ba90919063ffffffff16565b92506108dc565b6108d96103e8856113a490919063ffffffff16565b92505b6108e63384611828565b3373ffffffffffffffffffffffffffffffffffffffff167f4089141ea5e4c16575f5ebf65f1786497ea07c175846fc7745ef8d8986a4ff65858560405161092e9291906120b9565b60405180910390a2600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161099593929190611e01565b602060405180830381600087803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e79190611ac6565b6109f057600080fd5b5050919050565b60006012905090565b6000610aa2610a0d6111d1565b848460026000610a1b6111d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9d9190612119565b6111d9565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610afd6111d1565b73ffffffffffffffffffffffffffffffffffffffff16610b1b610c2f565b73ffffffffffffffffffffffffffffffffffffffff1614610b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6890611f9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054610c67906122b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c93906122b6565b8015610ce05780601f10610cb557610100808354040283529160200191610ce0565b820191906000526020600020905b815481529060010190602001808311610cc357829003601f168201915b5050505050905090565b60008060026000610cf96111d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad9061205e565b60405180910390fd5b610dd3610dc16111d1565b858584610dce91906121fa565b6111d9565b600191505092915050565b6000610df2610deb6111d1565b84846113d0565b6001905092915050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e599190611de6565b60206040518083038186803b158015610e7157600080fd5b505afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611b18565b905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610f9493929190611e01565b602060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190611ac6565b611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c90611f1e565b60405180910390fd5b50565b6110306111d1565b73ffffffffffffffffffffffffffffffffffffffff1661104e610c2f565b73ffffffffffffffffffffffffffffffffffffffff16146110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b90611f9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110b90611ede565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124090611ffe565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b090611efe565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611397919061209e565b60405180910390a3505050565b600081836113b291906121a0565b905092915050565b600081836113c8919061216f565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143790611fde565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a790611e9e565b60405180910390fd5b6114bb83838361197d565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153990611f3e565b60405180910390fd5b818161154e91906121fa565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115e09190612119565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611644919061209e565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b990611fbe565b60405180910390fd5b6116ce8260008361197d565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174c90611ebe565b60405180910390fd5b818161176191906121fa565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008282546117b691906121fa565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161181b919061209e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188f9061207e565b60405180910390fd5b6118a46000838361197d565b80600360008282546118b69190612119565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461190c9190612119565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611971919061209e565b60405180910390a35050565b505050565b600081359050611991816127de565b92915050565b6000815190506119a6816127f5565b92915050565b6000813590506119bb8161280c565b92915050565b6000815190506119d08161280c565b92915050565b6000602082840312156119e857600080fd5b60006119f684828501611982565b91505092915050565b60008060408385031215611a1257600080fd5b6000611a2085828601611982565b9250506020611a3185828601611982565b9150509250929050565b600080600060608486031215611a5057600080fd5b6000611a5e86828701611982565b9350506020611a6f86828701611982565b9250506040611a80868287016119ac565b9150509250925092565b60008060408385031215611a9d57600080fd5b6000611aab85828601611982565b9250506020611abc858286016119ac565b9150509250929050565b600060208284031215611ad857600080fd5b6000611ae684828501611997565b91505092915050565b600060208284031215611b0157600080fd5b6000611b0f848285016119ac565b91505092915050565b600060208284031215611b2a57600080fd5b6000611b38848285016119c1565b91505092915050565b611b4a8161222e565b82525050565b611b5981612240565b82525050565b6000611b6a826120fd565b611b748185612108565b9350611b84818560208601612283565b611b8d81612375565b840191505092915050565b6000611ba5602383612108565b9150611bb082612386565b604082019050919050565b6000611bc8602283612108565b9150611bd3826123d5565b604082019050919050565b6000611beb602683612108565b9150611bf682612424565b604082019050919050565b6000611c0e602283612108565b9150611c1982612473565b604082019050919050565b6000611c31605083612108565b9150611c3c826124c2565b606082019050919050565b6000611c54602683612108565b9150611c5f82612537565b604082019050919050565b6000611c77601283612108565b9150611c8282612586565b602082019050919050565b6000611c9a602883612108565b9150611ca5826125af565b604082019050919050565b6000611cbd602083612108565b9150611cc8826125fe565b602082019050919050565b6000611ce0602183612108565b9150611ceb82612627565b604082019050919050565b6000611d03602583612108565b9150611d0e82612676565b604082019050919050565b6000611d26602483612108565b9150611d31826126c5565b604082019050919050565b6000611d49601983612108565b9150611d5482612714565b602082019050919050565b6000611d6c601983612108565b9150611d778261273d565b602082019050919050565b6000611d8f602583612108565b9150611d9a82612766565b604082019050919050565b6000611db2601f83612108565b9150611dbd826127b5565b602082019050919050565b611dd18161226c565b82525050565b611de081612276565b82525050565b6000602082019050611dfb6000830184611b41565b92915050565b6000606082019050611e166000830186611b41565b611e236020830185611b41565b611e306040830184611dc8565b949350505050565b6000604082019050611e4d6000830185611b41565b611e5a6020830184611dc8565b9392505050565b6000602082019050611e766000830184611b50565b92915050565b60006020820190508181036000830152611e968184611b5f565b905092915050565b60006020820190508181036000830152611eb781611b98565b9050919050565b60006020820190508181036000830152611ed781611bbb565b9050919050565b60006020820190508181036000830152611ef781611bde565b9050919050565b60006020820190508181036000830152611f1781611c01565b9050919050565b60006020820190508181036000830152611f3781611c24565b9050919050565b60006020820190508181036000830152611f5781611c47565b9050919050565b60006020820190508181036000830152611f7781611c6a565b9050919050565b60006020820190508181036000830152611f9781611c8d565b9050919050565b60006020820190508181036000830152611fb781611cb0565b9050919050565b60006020820190508181036000830152611fd781611cd3565b9050919050565b60006020820190508181036000830152611ff781611cf6565b9050919050565b6000602082019050818103600083015261201781611d19565b9050919050565b6000602082019050818103600083015261203781611d3c565b9050919050565b6000602082019050818103600083015261205781611d5f565b9050919050565b6000602082019050818103600083015261207781611d82565b9050919050565b6000602082019050818103600083015261209781611da5565b9050919050565b60006020820190506120b36000830184611dc8565b92915050565b60006040820190506120ce6000830185611dc8565b6120db6020830184611dc8565b9392505050565b60006020820190506120f76000830184611dd7565b92915050565b600081519050919050565b600082825260208201905092915050565b60006121248261226c565b915061212f8361226c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612164576121636122e8565b5b828201905092915050565b600061217a8261226c565b91506121858361226c565b92508261219557612194612317565b5b828204905092915050565b60006121ab8261226c565b91506121b68361226c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121ef576121ee6122e8565b5b828202905092915050565b60006122058261226c565b91506122108361226c565b925082821015612223576122226122e8565b5b828203905092915050565b60006122398261224c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156122a1578082015181840152602081019050612286565b838111156122b0576000848401525b50505050565b600060028204905060018216806122ce57607f821691505b602082108114156122e2576122e1612346565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e207472616e73666572206572726f723a20506c65617365206c6f7760008201527f65722074686520616d6f756e74206f66207072656d69756d732074686174207960208201527f6f752077616e7420746f2073656e642e00000000000000000000000000000000604082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f506f6f6c3a20416d6f756e7420697320746f6f20736d616c6c00000000000000600082015250565b7f506f6f6c3a20416d6f756e7420697320746f6f206c6172676500000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6127e78161222e565b81146127f257600080fd5b50565b6127fe81612240565b811461280957600080fd5b50565b6128158161226c565b811461282057600080fd5b5056fea2646970667358221220d31d5da4ecc56918f659797469b49427213e35b8bc9682ed789168f31f03040b64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c57806312424e3f1461007a578063715018a6146100845780638da5cb5b1461008e578063f2fde38b146100ac575b600080fd5b6100646100c8565b6040516100719190610707565b60405180910390f35b610082610156565b005b61008c610273565b005b6100966103ad565b6040516100a391906106c3565b60405180910390f35b6100c660048036038101906100c191906105b1565b6103d6565b005b600180546100d590610820565b80601f016020809104026020016040519081016040528092919081815260200182805461010190610820565b801561014e5780601f106101235761010080835404028352916020019161014e565b820191906000526020600020905b81548152906001019060200180831161013157829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a084595161401484a0000006040518363ffffffff1660e01b81526004016101e09291906106de565b602060405180830381600087803b1580156101fa57600080fd5b505af115801561020e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023291906105da565b610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610749565b60405180910390fd5b565b61027b61057f565b73ffffffffffffffffffffffffffffffffffffffff166102996103ad565b73ffffffffffffffffffffffffffffffffffffffff16146102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690610769565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103de61057f565b73ffffffffffffffffffffffffffffffffffffffff166103fc6103ad565b73ffffffffffffffffffffffffffffffffffffffff1614610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044990610769565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610729565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008135905061059681610933565b92915050565b6000815190506105ab8161094a565b92915050565b6000602082840312156105c357600080fd5b60006105d184828501610587565b91505092915050565b6000602082840312156105ec57600080fd5b60006105fa8482850161059c565b91505092915050565b61060c816107a5565b82525050565b600061061d82610789565b6106278185610794565b93506106378185602086016107ed565b61064081610881565b840191505092915050565b6000610658602683610794565b915061066382610892565b604082019050919050565b600061067b601483610794565b9150610686826108e1565b602082019050919050565b600061069e602083610794565b91506106a98261090a565b602082019050919050565b6106bd816107e3565b82525050565b60006020820190506106d86000830184610603565b92915050565b60006040820190506106f36000830185610603565b61070060208301846106b4565b9392505050565b600060208201905081810360008301526107218184610612565b905092915050565b600060208201905081810360008301526107428161064b565b9050919050565b600060208201905081810360008301526107628161066e565b9050919050565b6000602082019050818103600083015261078281610691565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006107b0826107c3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561080b5780820151818401526020810190506107f0565b8381111561081a576000848401525b50505050565b6000600282049050600182168061083857607f821691505b6020821081141561084c5761084b610852565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f746f6b656e20617070726f7665206661696c6564000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61093c816107a5565b811461094757600080fd5b50565b610953816107b7565b811461095e57600080fd5b5056fea2646970667358221220f3c72a7a7197e82f662b2deca7ccbc800da638d02f7d878c7568e96a4d8c1a1b64736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2259:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "86:96:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "96:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "111:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "105:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "96:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "170:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_DaiToken_$188",
                      "nodeType": "YulIdentifier",
                      "src": "127:42:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "127:49:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_DaiToken_$188_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "64:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "72:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "80:5:9",
                "type": ""
              }
            ],
            "src": "7:175:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "281:223:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "327:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "336:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "339:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "329:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "329:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "329:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "302:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "311:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "298:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "298:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "323:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "294:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "291:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "353:144:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "368:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "382:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "372:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "397:90:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "459:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "470:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "455:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "455:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "479:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_DaiToken_$188_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "407:47:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "407:80:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "397:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaiToken_$188_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:9",
                "type": ""
              }
            ],
            "src": "188:316:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "591:82:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "608:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "660:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_DaiToken_$188_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "613:46:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:53:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "601:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "601:66:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_DaiToken_$188_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "579:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "586:3:9",
                "type": ""
              }
            ],
            "src": "510:163:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "793:140:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "803:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "815:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "826:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "811:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "803:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "899:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "912:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "923:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "908:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "908:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_DaiToken_$188_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "839:59:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:87:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "839:87:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaiToken_$188__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "765:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "777:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "788:4:9",
                "type": ""
              }
            ],
            "src": "679:254:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "984:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "994:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1023:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1005:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1005:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "994:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "966:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "976:7:9",
                "type": ""
              }
            ],
            "src": "939:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1102:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1141:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1123:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1112:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_DaiToken_$188",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1084:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1094:7:9",
                "type": ""
              }
            ],
            "src": "1041:112:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1204:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1214:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1229:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1236:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1225:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1225:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1214:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1186:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1196:7:9",
                "type": ""
              }
            ],
            "src": "1159:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1367:82:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1377:66:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1437:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_DaiToken_$188_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1390:46:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:53:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1377:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DaiToken_$188_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1347:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1357:9:9",
                "type": ""
              }
            ],
            "src": "1291:158:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:53:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1541:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1572:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1554:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1554:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1541:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DaiToken_$188_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1511:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1521:9:9",
                "type": ""
              }
            ],
            "src": "1455:129:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1641:269:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1651:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1665:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1671:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1661:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1661:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1651:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1682:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1712:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1718:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1708:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1708:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1686:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1759:51:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1773:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1787:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1795:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1783:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1783:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1773:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1739:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1729:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1862:42:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "1876:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1876:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1876:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1826:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1849:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1857:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1846:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1846:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1823:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1823:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1820:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1625:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1634:6:9",
                "type": ""
              }
            ],
            "src": "1590:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1944:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1961:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1964:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1954:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1954:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2058:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:4:9",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2051:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2082:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2085:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2075:15:9"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "1916:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2161:95:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2234:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2243:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2246:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2236:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2236:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2236:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2184:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2225:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_DaiToken_$188",
                              "nodeType": "YulIdentifier",
                              "src": "2191:33:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2191:40:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2181:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2181:51:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2174:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2174:59:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2171:2:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_DaiToken_$188",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2154:5:9",
                "type": ""
              }
            ],
            "src": "2102:154:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_DaiToken_$188_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_DaiToken_$188(value)\n    }\n\n    function abi_decode_tuple_t_contract$_DaiToken_$188_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_DaiToken_$188_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_DaiToken_$188_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DaiToken_$188_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_DaiToken_$188__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DaiToken_$188_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_DaiToken_$188(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_DaiToken_$188_to_t_address(value) -> converted {\n        converted := convert_t_contract$_DaiToken_$188_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DaiToken_$188_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_contract$_DaiToken_$188(value) {\n        if iszero(eq(value, cleanup_t_contract$_DaiToken_$188(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7209:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "7:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:9",
                "type": ""
              }
            ],
            "src": "152:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "361:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "407:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "416:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "419:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "409:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "409:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "409:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "382:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "391:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "378:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "378:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "403:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "374:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "374:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "371:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "433:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "448:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "452:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "477:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "512:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "523:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "508:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "508:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "532:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "487:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "477:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "331:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "342:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "354:6:9",
                "type": ""
              }
            ],
            "src": "295:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "637:204:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "683:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "692:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "695:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "685:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "685:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "685:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "658:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "667:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "679:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "650:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "650:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "647:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "709:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "724:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "728:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "753:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "796:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "807:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "792:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "792:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "816:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "763:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "763:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "753:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "607:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "618:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "630:6:9",
                "type": ""
              }
            ],
            "src": "563:278:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "912:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "929:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "952:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "934:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "934:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "922:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "922:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "900:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "907:3:9",
                "type": ""
              }
            ],
            "src": "847:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1063:272:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1073:53:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1120:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1087:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1087:39:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1077:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1135:78:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1201:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1206:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1142:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:71:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1135:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1248:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1255:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1244:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:16:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1262:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1267:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1222:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1222:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1283:46:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1294:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1321:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1299:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1299:29:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1290:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1290:39:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1283:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1044:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1051:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1059:3:9",
                "type": ""
              }
            ],
            "src": "971:364:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1487:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1497:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1563:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1568:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1504:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1497:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1669:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "1580:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1580:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1682:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1698:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1689:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1682:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1475:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1483:3:9",
                "type": ""
              }
            ],
            "src": "1341:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1859:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1869:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1935:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1940:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1876:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1869:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2041:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4",
                      "nodeType": "YulIdentifier",
                      "src": "1952:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1952:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1952:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2054:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2065:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2070:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2061:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2054:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1847:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1855:3:9",
                "type": ""
              }
            ],
            "src": "1713:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2231:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2241:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2307:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2312:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2248:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2248:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2241:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2413:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "2324:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2324:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2324:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2426:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2437:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2442:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2433:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2426:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2219:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2227:3:9",
                "type": ""
              }
            ],
            "src": "2085:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2522:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2539:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2562:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2544:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2544:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2510:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2517:3:9",
                "type": ""
              }
            ],
            "src": "2457:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2679:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2689:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2701:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2712:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2697:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2689:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2769:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2782:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2793:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2778:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2778:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2725:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2725:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2651:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2663:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2674:4:9",
                "type": ""
              }
            ],
            "src": "2581:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2935:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2945:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2957:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2968:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2953:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2945:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3025:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3038:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3049:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3034:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2981:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2981:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2981:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3106:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3119:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3130:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3115:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3115:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3062:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3062:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3062:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2899:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2911:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2919:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2930:4:9",
                "type": ""
              }
            ],
            "src": "2809:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3265:195:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3275:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3287:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3298:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3283:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3275:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3322:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3333:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3318:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3318:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3341:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3347:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3337:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3337:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3311:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3311:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3311:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3367:86:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3439:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3448:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3375:63:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:78:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3367:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3237:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3249:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3260:4:9",
                "type": ""
              }
            ],
            "src": "3147:313:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3637:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3647:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3659:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3670:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3655:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3655:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3647:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3694:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3705:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3690:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3690:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3713:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3719:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3709:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3709:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3683:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3683:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3683:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3739:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3873:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3747:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3739:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3617:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3632:4:9",
                "type": ""
              }
            ],
            "src": "3466:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4062:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4072:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4084:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4095:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4080:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4080:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4072:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4119:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4130:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4138:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4144:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4134:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4134:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4164:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4298:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4172:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4172:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4164:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4042:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4057:4:9",
                "type": ""
              }
            ],
            "src": "3891:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4487:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4497:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4509:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4520:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4505:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4505:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4497:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4544:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4555:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4540:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4540:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4563:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4569:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4559:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4559:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4533:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4533:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4533:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4589:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4723:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4597:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4589:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4467:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4482:4:9",
                "type": ""
              }
            ],
            "src": "4316:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4800:40:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4811:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4827:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4821:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4821:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4811:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4783:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4793:6:9",
                "type": ""
              }
            ],
            "src": "4741:99:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4942:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4959:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4964:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4952:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4952:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4952:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4980:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4999:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5004:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4995:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4995:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4980:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4914:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4919:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4930:11:9",
                "type": ""
              }
            ],
            "src": "4846:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5076:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5105:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5087:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5087:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5076:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5048:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5058:7:9",
                "type": ""
              }
            ],
            "src": "5021:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5165:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5175:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5200:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5193:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5193:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5175:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5147:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5157:7:9",
                "type": ""
              }
            ],
            "src": "5123:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5264:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5274:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5289:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5296:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5285:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5285:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5274:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5246:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5256:7:9",
                "type": ""
              }
            ],
            "src": "5219:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5396:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5406:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5417:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5406:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5378:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5388:7:9",
                "type": ""
              }
            ],
            "src": "5351:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5483:258:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5493:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5502:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5497:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5562:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5587:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5592:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5583:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5583:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5606:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5611:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5602:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5602:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5596:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5596:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5576:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5576:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5576:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5523:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5526:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5520:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5520:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5534:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5536:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5545:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5548:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5541:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5541:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5536:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5516:3:9",
                    "statements": []
                  },
                  "src": "5512:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5659:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5709:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5714:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5705:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5705:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5723:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5698:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5698:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5698:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5640:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5643:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5637:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5637:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5634:2:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5465:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5470:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5475:6:9",
                "type": ""
              }
            ],
            "src": "5434:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5798:269:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5808:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5822:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5828:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5818:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5818:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5808:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5839:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5869:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5875:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5865:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5865:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5843:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5916:51:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5930:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5944:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5952:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5940:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5940:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5930:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5896:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5889:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5889:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5886:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6019:42:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "6033:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6033:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6033:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5983:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6006:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6014:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6003:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6003:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5980:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5980:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5977:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5782:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5791:6:9",
                "type": ""
              }
            ],
            "src": "5747:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6101:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6118:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6121:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6111:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6111:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6111:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6215:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6218:4:9",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6208:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6208:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6208:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6239:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6242:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6232:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6232:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6232:15:9"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "6073:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6307:54:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6317:38:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6335:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6342:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6331:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6331:14:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6351:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6347:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6347:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6327:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6327:28:9"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "6317:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6290:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "6300:6:9",
                "type": ""
              }
            ],
            "src": "6259:102:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6473:119:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6495:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6503:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6491:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6491:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6507:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6484:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6484:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6484:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6563:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6571:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6559:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6559:15:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6576:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6552:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6552:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6552:33:9"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6465:6:9",
                "type": ""
              }
            ],
            "src": "6367:225:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6704:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6726:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6734:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6722:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6722:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6738:22:9",
                        "type": "",
                        "value": "token approve failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6715:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6715:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6715:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6696:6:9",
                "type": ""
              }
            ],
            "src": "6598:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6880:76:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6902:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6910:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6898:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6898:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6914:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6891:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6891:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6891:58:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6872:6:9",
                "type": ""
              }
            ],
            "src": "6774:182:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7005:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7062:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7071:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7074:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7064:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7064:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7064:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7028:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7053:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7035:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7035:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7025:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7025:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7018:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7018:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7015:2:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6998:5:9",
                "type": ""
              }
            ],
            "src": "6962:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7130:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7184:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7193:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7196:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7186:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7186:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7186:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7153:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7175:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7160:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7160:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7150:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7150:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7143:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7143:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7140:2:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7123:5:9",
                "type": ""
              }
            ],
            "src": "7090:116:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"token approve failed\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "140:1250:3:-:0;;;170:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;269:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;306:22;867:17:4;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;483:5:2;470:10;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:65;348:6:3::1;340:5;;:14;;;;;;;;;;;;;;;;;;389:5;;;;;;;;;;;371:24;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;364:4;;:31;;;;;;;;;;;;;;;;;;269:154:::0;140:1250;;586:96:7;639:7;665:10;658:17;;586:96;:::o;140:1250:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:175:9:-;;111:6;105:13;96:22;;127:49;170:5;127:49;:::i;:::-;86:96;;;;:::o;188:316::-;;323:2;311:9;302:7;298:23;294:32;291:2;;;339:1;336;329:12;291:2;382:1;407:80;479:7;470:6;459:9;455:22;407:80;:::i;:::-;397:90;;353:144;281:223;;;;:::o;510:163::-;613:53;660:5;613:53;:::i;:::-;608:3;601:66;591:82;;:::o;679:254::-;;826:2;815:9;811:18;803:26;;839:87;923:1;912:9;908:17;899:6;839:87;:::i;:::-;793:140;;;;:::o;939:96::-;;1005:24;1023:5;1005:24;:::i;:::-;994:35;;984:51;;;:::o;1041:112::-;;1123:24;1141:5;1123:24;:::i;:::-;1112:35;;1102:51;;;:::o;1159:126::-;;1236:42;1229:5;1225:54;1214:65;;1204:81;;;:::o;1291:158::-;;1390:53;1437:5;1390:53;:::i;:::-;1377:66;;1367:82;;;:::o;1455:129::-;;1554:24;1572:5;1554:24;:::i;:::-;1541:37;;1531:53;;;:::o;1590:320::-;;1671:1;1665:4;1661:12;1651:22;;1718:1;1712:4;1708:12;1739:18;1729:2;;1795:4;1787:6;1783:17;1773:27;;1729:2;1857;1849:6;1846:14;1826:18;1823:38;1820:2;;;1876:18;;:::i;:::-;1820:2;1641:269;;;;:::o;1916:180::-;1964:77;1961:1;1954:88;2061:4;2058:1;2051:15;2085:4;2082:1;2075:15;2102:154;2191:40;2225:5;2191:40;:::i;:::-;2184:5;2181:51;2171:2;;2246:1;2243;2236:12;2171:2;2161:95;:::o;140:1250:3:-;;;;;;;",
  "deployedSourceMap": "140:1250:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;516:141;;;:::i;:::-;;1700:145:4;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;170:48:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;516:141::-;560:5;;;;;;;;;;;:13;;;582:4;;;;;;;;;;;597:26;560:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;552:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;516:141::o;1700:145:4:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:7:-;639:7;665:10;658:17;;586:96;:::o;7:139:9:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:262::-;;403:2;391:9;382:7;378:23;374:32;371:2;;;419:1;416;409:12;371:2;462:1;487:53;532:7;523:6;512:9;508:22;487:53;:::i;:::-;477:63;;433:117;361:196;;;;:::o;563:278::-;;679:2;667:9;658:7;654:23;650:32;647:2;;;695:1;692;685:12;647:2;738:1;763:61;816:7;807:6;796:9;792:22;763:61;:::i;:::-;753:71;;709:125;637:204;;;;:::o;847:118::-;934:24;952:5;934:24;:::i;:::-;929:3;922:37;912:53;;:::o;971:364::-;;1087:39;1120:5;1087:39;:::i;:::-;1142:71;1206:6;1201:3;1142:71;:::i;:::-;1135:78;;1222:52;1267:6;1262:3;1255:4;1248:5;1244:16;1222:52;:::i;:::-;1299:29;1321:6;1299:29;:::i;:::-;1294:3;1290:39;1283:46;;1063:272;;;;;:::o;1341:366::-;;1504:67;1568:2;1563:3;1504:67;:::i;:::-;1497:74;;1580:93;1669:3;1580:93;:::i;:::-;1698:2;1693:3;1689:12;1682:19;;1487:220;;;:::o;1713:366::-;;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1859:220;;;:::o;2085:366::-;;2248:67;2312:2;2307:3;2248:67;:::i;:::-;2241:74;;2324:93;2413:3;2324:93;:::i;:::-;2442:2;2437:3;2433:12;2426:19;;2231:220;;;:::o;2457:118::-;2544:24;2562:5;2544:24;:::i;:::-;2539:3;2532:37;2522:53;;:::o;2581:222::-;;2712:2;2701:9;2697:18;2689:26;;2725:71;2793:1;2782:9;2778:17;2769:6;2725:71;:::i;:::-;2679:124;;;;:::o;2809:332::-;;2968:2;2957:9;2953:18;2945:26;;2981:71;3049:1;3038:9;3034:17;3025:6;2981:71;:::i;:::-;3062:72;3130:2;3119:9;3115:18;3106:6;3062:72;:::i;:::-;2935:206;;;;;:::o;3147:313::-;;3298:2;3287:9;3283:18;3275:26;;3347:9;3341:4;3337:20;3333:1;3322:9;3318:17;3311:47;3375:78;3448:4;3439:6;3375:78;:::i;:::-;3367:86;;3265:195;;;;:::o;3466:419::-;;3670:2;3659:9;3655:18;3647:26;;3719:9;3713:4;3709:20;3705:1;3694:9;3690:17;3683:47;3747:131;3873:4;3747:131;:::i;:::-;3739:139;;3637:248;;;:::o;3891:419::-;;4095:2;4084:9;4080:18;4072:26;;4144:9;4138:4;4134:20;4130:1;4119:9;4115:17;4108:47;4172:131;4298:4;4172:131;:::i;:::-;4164:139;;4062:248;;;:::o;4316:419::-;;4520:2;4509:9;4505:18;4497:26;;4569:9;4563:4;4559:20;4555:1;4544:9;4540:17;4533:47;4597:131;4723:4;4597:131;:::i;:::-;4589:139;;4487:248;;;:::o;4741:99::-;;4827:5;4821:12;4811:22;;4800:40;;;:::o;4846:169::-;;4964:6;4959:3;4952:19;5004:4;4999:3;4995:14;4980:29;;4942:73;;;;:::o;5021:96::-;;5087:24;5105:5;5087:24;:::i;:::-;5076:35;;5066:51;;;:::o;5123:90::-;;5200:5;5193:13;5186:21;5175:32;;5165:48;;;:::o;5219:126::-;;5296:42;5289:5;5285:54;5274:65;;5264:81;;;:::o;5351:77::-;;5417:5;5406:16;;5396:32;;;:::o;5434:307::-;5502:1;5512:113;5526:6;5523:1;5520:13;5512:113;;;5611:1;5606:3;5602:11;5596:18;5592:1;5587:3;5583:11;5576:39;5548:2;5545:1;5541:10;5536:15;;5512:113;;;5643:6;5640:1;5637:13;5634:2;;;5723:1;5714:6;5709:3;5705:16;5698:27;5634:2;5483:258;;;;:::o;5747:320::-;;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:2;;5952:4;5944:6;5940:17;5930:27;;5886:2;6014;6006:6;6003:14;5983:18;5980:38;5977:2;;;6033:18;;:::i;:::-;5977:2;5798:269;;;;:::o;6073:180::-;6121:77;6118:1;6111:88;6218:4;6215:1;6208:15;6242:4;6239:1;6232:15;6259:102;;6351:2;6347:7;6342:2;6335:5;6331:14;6327:28;6317:38;;6307:54;;;:::o;6367:225::-;6507:34;6503:1;6495:6;6491:14;6484:58;6576:8;6571:2;6563:6;6559:15;6552:33;6473:119;:::o;6598:170::-;6738:22;6734:1;6726:6;6722:14;6715:46;6704:64;:::o;6774:182::-;6914:34;6910:1;6902:6;6898:14;6891:58;6880:76;:::o;6962:122::-;7035:24;7053:5;7035:24;:::i;:::-;7028:5;7025:35;7015:2;;7074:1;7071;7064:12;7015:2;7005:79;:::o;7090:116::-;7160:21;7175:5;7160:21;:::i;:::-;7153:5;7150:32;7140:2;;7196:1;7193;7186:12;7140:2;7130:76;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.3;\n\nimport \"./DaiToken.sol\";\nimport \"./LiquidityPool.sol\";\nimport \"./Options.sol\";\n\ncontract Put is Options{\n\n    string public name = \"Put Hedge Option Contract\";\n    DaiToken token;\n    LiquidityPool pool;\n\n    constructor(DaiToken _token) Options(Options.OptionType.Put) {\n        token = _token;\n        pool = new LiquidityPool(token);\n        //approve();\n    }\n\n    /**\n     * @notice Allows the ERC pool contract to receive and send tokens\n     */\n    function approve() public {\n        require(token.approve(address(pool), uint256(10000000000000000000000000)), \"token approve failed\");\n    }\n\n    /**\n     * @notice Sends premiums to the ERC liquidity pool contract\n     */\n    function sendPremium(uint256 amount) internal override returns (uint premium) {\n        /*\n        uint currentPrice = uint(priceProvider.latestAnswer());\n        address[] memory path = new address[](2);\n        path[0] = uniswapRouter.WETH();\n        path[1] = address(token);\n        uint[] memory amounts = uniswapRouter.swapExactETHForTokens {\n            value: amount\n        }(\n            amount.mul(currentPrice).mul(maxSpread).div(1e10),\n            path,\n            address(this),\n            now\n        );\n        premium = amounts[amounts.length - 1];\n        */\n        premium = 10;\n        pool.sendPremium(amount);\n    }\n\n\n\n\n}",
  "sourcePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Put.sol",
  "ast": {
    "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Put.sol",
    "exportedSymbols": {
      "Context": [
        1290
      ],
      "DaiToken": [
        188
      ],
      "ERC20": [
        1189
      ],
      "IERC20": [
        1267
      ],
      "LiquidityPool": [
        443
      ],
      "Options": [
        497
      ],
      "Ownable": [
        688
      ],
      "Put": [
        578
      ],
      "SafeMath": [
        1602
      ]
    },
    "id": 579,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 499,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:3"
      },
      {
        "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 500,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 189,
        "src": "60:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 501,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 444,
        "src": "85:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Options.sol",
        "file": "./Options.sol",
        "id": 502,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 498,
        "src": "115:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 503,
              "name": "Options",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "156:7:3"
            },
            "id": 504,
            "nodeType": "InheritanceSpecifier",
            "src": "156:7:3"
          }
        ],
        "contractDependencies": [
          443,
          497,
          688,
          1290
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 578,
        "linearizedBaseContracts": [
          578,
          497,
          688,
          1290
        ],
        "name": "Put",
        "nameLocation": "149:3:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 507,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "184:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "170:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 505,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "170:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "507574204865646765204f7074696f6e20436f6e7472616374",
              "id": 506,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "191:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_85e2d516c9a997b40eb3360af432cd15f40ca6a3e2703851017e0f42cf6f1700",
                "typeString": "literal_string \"Put Hedge Option Contract\""
              },
              "value": "Put Hedge Option Contract"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 510,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "233:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "224:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$188",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 509,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 508,
                "name": "DaiToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 188,
                "src": "224:8:3"
              },
              "referencedDeclaration": 188,
              "src": "224:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$188",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 513,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "258:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "244:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$443",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 512,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 511,
                "name": "LiquidityPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 443,
                "src": "244:13:3"
              },
              "referencedDeclaration": 443,
              "src": "244:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$443",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "330:93:3",
              "statements": [
                {
                  "expression": {
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 524,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "340:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$188",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 525,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "348:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$188",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "340:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$188",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "340:14:3"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 528,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "364:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$443",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 532,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "389:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaiToken_$188",
                            "typeString": "contract DaiToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaiToken_$188",
                            "typeString": "contract DaiToken"
                          }
                        ],
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "371:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_DaiToken_$188_$returns$_t_contract$_LiquidityPool_$443_$",
                          "typeString": "function (contract DaiToken) returns (contract LiquidityPool)"
                        },
                        "typeName": {
                          "id": 530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 529,
                            "name": "LiquidityPool",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 443,
                            "src": "375:13:3"
                          },
                          "referencedDeclaration": 443,
                          "src": "375:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPool_$443",
                            "typeString": "contract LiquidityPool"
                          }
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "371:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$443",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "364:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$443",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "364:31:3"
                }
              ]
            },
            "id": 537,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "expression": {
                        "id": 519,
                        "name": "Options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "306:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Options_$497_$",
                          "typeString": "type(contract Options)"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OptionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 467,
                      "src": "306:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_OptionType_$467_$",
                        "typeString": "type(enum Options.OptionType)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Put",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 465,
                    "src": "306:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OptionType_$467",
                      "typeString": "enum Options.OptionType"
                    }
                  }
                ],
                "id": 522,
                "modifierName": {
                  "id": 518,
                  "name": "Options",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "298:7:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "298:31:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "290:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "281:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$188",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "id": 515,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 514,
                      "name": "DaiToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 188,
                      "src": "281:8:3"
                    },
                    "referencedDeclaration": 188,
                    "src": "281:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$188",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:17:3"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:3"
            },
            "scope": 578,
            "src": "269:154:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "542:115:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 546,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "582:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$443",
                                  "typeString": "contract LiquidityPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$443",
                                  "typeString": "contract LiquidityPool"
                                }
                              ],
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "574:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 544,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "574:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "574:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "3130303030303030303030303030303030303030303030303030",
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "597:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000000"
                                },
                                "value": "10000000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000000"
                                }
                              ],
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "589:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 548,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "589:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "589:35:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 542,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "560:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaiToken_$188",
                              "typeString": "contract DaiToken"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "560:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "560:65:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e20617070726f7665206661696c6564",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4",
                          "typeString": "literal_string \"token approve failed\""
                        },
                        "value": "token approve failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4",
                          "typeString": "literal_string \"token approve failed\""
                        }
                      ],
                      "id": 541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "552:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:98:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "552:98:3"
                }
              ]
            },
            "documentation": {
              "id": 538,
              "nodeType": "StructuredDocumentation",
              "src": "429:82:3",
              "text": " @notice Allows the ERC pool contract to receive and send tokens"
            },
            "functionSelector": "12424e3f",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "525:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:2:3"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:3"
            },
            "scope": 578,
            "src": "516:141:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              496
            ],
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "822:562:3",
              "statements": [
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1331:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1341:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1331:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:12:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "1370:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 570,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "1353:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$443",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendPremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 442,
                      "src": "1353:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:24:3"
                }
              ]
            },
            "documentation": {
              "id": 558,
              "nodeType": "StructuredDocumentation",
              "src": "663:76:3",
              "text": " @notice Sends premiums to the ERC liquidity pool contract"
            },
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendPremium",
            "nameLocation": "753:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "790:8:3"
            },
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "773:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "765:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:16:3"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "813:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "808:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "807:14:3"
            },
            "scope": 578,
            "src": "744:640:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 579,
        "src": "140:1250:3"
      }
    ],
    "src": "36:1354:3"
  },
  "legacyAST": {
    "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Put.sol",
    "exportedSymbols": {
      "Context": [
        1290
      ],
      "DaiToken": [
        188
      ],
      "ERC20": [
        1189
      ],
      "IERC20": [
        1267
      ],
      "LiquidityPool": [
        443
      ],
      "Options": [
        497
      ],
      "Ownable": [
        688
      ],
      "Put": [
        578
      ],
      "SafeMath": [
        1602
      ]
    },
    "id": 579,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 499,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:3"
      },
      {
        "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 500,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 189,
        "src": "60:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 501,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 444,
        "src": "85:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/caique/Documentos/Cryptobal/project/hedge-poc/src/contracts/Options.sol",
        "file": "./Options.sol",
        "id": 502,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 498,
        "src": "115:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 503,
              "name": "Options",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "156:7:3"
            },
            "id": 504,
            "nodeType": "InheritanceSpecifier",
            "src": "156:7:3"
          }
        ],
        "contractDependencies": [
          443,
          497,
          688,
          1290
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 578,
        "linearizedBaseContracts": [
          578,
          497,
          688,
          1290
        ],
        "name": "Put",
        "nameLocation": "149:3:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 507,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "184:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "170:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 505,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "170:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "507574204865646765204f7074696f6e20436f6e7472616374",
              "id": 506,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "191:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_85e2d516c9a997b40eb3360af432cd15f40ca6a3e2703851017e0f42cf6f1700",
                "typeString": "literal_string \"Put Hedge Option Contract\""
              },
              "value": "Put Hedge Option Contract"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 510,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "233:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "224:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$188",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 509,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 508,
                "name": "DaiToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 188,
                "src": "224:8:3"
              },
              "referencedDeclaration": 188,
              "src": "224:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$188",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 513,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "258:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "244:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$443",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 512,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 511,
                "name": "LiquidityPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 443,
                "src": "244:13:3"
              },
              "referencedDeclaration": 443,
              "src": "244:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$443",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "330:93:3",
              "statements": [
                {
                  "expression": {
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 524,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "340:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$188",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 525,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "348:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$188",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "340:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$188",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "340:14:3"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 528,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "364:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$443",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 532,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "389:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaiToken_$188",
                            "typeString": "contract DaiToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaiToken_$188",
                            "typeString": "contract DaiToken"
                          }
                        ],
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "371:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_DaiToken_$188_$returns$_t_contract$_LiquidityPool_$443_$",
                          "typeString": "function (contract DaiToken) returns (contract LiquidityPool)"
                        },
                        "typeName": {
                          "id": 530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 529,
                            "name": "LiquidityPool",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 443,
                            "src": "375:13:3"
                          },
                          "referencedDeclaration": 443,
                          "src": "375:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPool_$443",
                            "typeString": "contract LiquidityPool"
                          }
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "371:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$443",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "364:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$443",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "364:31:3"
                }
              ]
            },
            "id": 537,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "expression": {
                        "id": 519,
                        "name": "Options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "306:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Options_$497_$",
                          "typeString": "type(contract Options)"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OptionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 467,
                      "src": "306:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_OptionType_$467_$",
                        "typeString": "type(enum Options.OptionType)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Put",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 465,
                    "src": "306:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OptionType_$467",
                      "typeString": "enum Options.OptionType"
                    }
                  }
                ],
                "id": 522,
                "modifierName": {
                  "id": 518,
                  "name": "Options",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "298:7:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "298:31:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "290:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "281:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$188",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "id": 515,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 514,
                      "name": "DaiToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 188,
                      "src": "281:8:3"
                    },
                    "referencedDeclaration": 188,
                    "src": "281:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$188",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:17:3"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:3"
            },
            "scope": 578,
            "src": "269:154:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "542:115:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 546,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "582:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$443",
                                  "typeString": "contract LiquidityPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$443",
                                  "typeString": "contract LiquidityPool"
                                }
                              ],
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "574:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 544,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "574:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "574:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "3130303030303030303030303030303030303030303030303030",
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "597:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000000"
                                },
                                "value": "10000000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000000"
                                }
                              ],
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "589:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 548,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "589:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "589:35:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 542,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "560:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaiToken_$188",
                              "typeString": "contract DaiToken"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "560:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "560:65:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e20617070726f7665206661696c6564",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4",
                          "typeString": "literal_string \"token approve failed\""
                        },
                        "value": "token approve failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45b832371179ab7b8de6190064b3ffa7b095ac14dd306bfa6ef292fcfec463e4",
                          "typeString": "literal_string \"token approve failed\""
                        }
                      ],
                      "id": 541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "552:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:98:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "552:98:3"
                }
              ]
            },
            "documentation": {
              "id": 538,
              "nodeType": "StructuredDocumentation",
              "src": "429:82:3",
              "text": " @notice Allows the ERC pool contract to receive and send tokens"
            },
            "functionSelector": "12424e3f",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "525:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:2:3"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:3"
            },
            "scope": 578,
            "src": "516:141:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              496
            ],
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "822:562:3",
              "statements": [
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1331:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1341:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1331:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:12:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "1370:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 570,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "1353:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$443",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendPremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 442,
                      "src": "1353:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:24:3"
                }
              ]
            },
            "documentation": {
              "id": 558,
              "nodeType": "StructuredDocumentation",
              "src": "663:76:3",
              "text": " @notice Sends premiums to the ERC liquidity pool contract"
            },
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendPremium",
            "nameLocation": "753:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "790:8:3"
            },
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "773:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "765:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:16:3"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "813:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "808:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "807:14:3"
            },
            "scope": 578,
            "src": "744:640:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 579,
        "src": "140:1250:3"
      }
    ],
    "src": "36:1354:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x278b0fd0170e87df8d6e9c94b47d3ff7382de693c547e6089b53f9972c532389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "settlementFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalFee",
              "type": "uint256"
            }
          ],
          "name": "Create",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1c2f0a6382f5e9EF4557086200A99f9632b60D8F",
      "transactionHash": "0x07c06c5c10fc3c7fa43ac2ef0b697cd66721799aa3cab3ad031efa7cce1141b3"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-06T21:14:47.390Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve()": {
        "notice": "Allows the ERC pool contract to receive and send tokens"
      }
    },
    "version": 1
  }
}